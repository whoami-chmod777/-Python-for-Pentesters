
• While loops can also have a "else" in Python
• explore this func1onality and write a simple program to illustrate


In Python, you can use an else clause with a while loop. The else part is executed when the while loop completes normally (i.e., without encountering a break statement). If the loop is exited with break, the else block will not be executed.

#!/usr/bin/python3

# How to use: $ python loop_have_else.py

count = 0

while count < 352:
    print("Count is: ", count) 
    count +=1
else:
        print("The Loop is completed and is now ", count)


Explanation:

while count < 5:: The loop runs as long as the condition count < 5 is true.
count += 1: We increment count inside the loop.
else:: Once the while loop finishes (when count reaches 5), the else block is executed.
If the loop had a break, the else block would be skipped.

*************************************************************************************************


#!/usr/bin/python

import sys

# How to use: python3 while_else.py <argument>

count = int( sys.argv[1])

while count < 9:
    print(count)
    count += 1
else:
    print("Finished while loop")


*************************************************************************************************

#!/usr/bin/python3

# How to use: $python fruits_while_else.py

# List of Fruits

my_list = ["banana", "papaya", "apple", "mango", "grapes", "pineapple", "coconut" ]

size = len(my_list)
i = 0

# Iterating through the fruit list

while i < size:
    if my_list[i] == 'mango':
        print("Mango found")
        break
    i += 1  
else:
    print("Fruit not found!")
